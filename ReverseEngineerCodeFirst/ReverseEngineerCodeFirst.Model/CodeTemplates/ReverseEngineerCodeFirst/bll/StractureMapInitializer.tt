<#@ template hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Data.Metadata.Edm" #>
<#@ parameter name="bllNS" type="System.String" #>
<#@ parameter name="dalNS" type="System.String" #>
<#@ parameter name="efHost" type="Microsoft.DbContextPackage.Utilities.EfTextTemplateHost" #>
using System;
//using System.Web;
//using System.Web.Mvc;
//using System.Web.Routing;
using <#= dalNS #>.Contexts;
using <#= dalNS #>.Services.Implementations.EF;
using <#= dalNS #>.Services.Interfaces;
using <#= dalNS #>.Services.Interfaces.Base;
using StructureMap;

namespace <#= bllNS #>.StructureMap
{
  public static class StractureMapInitializer
  {
    public static void InitializeTypes()
    {
      ObjectFactory.Initialize(x =>
      {
        x.For<IUnitOfWork>().HybridHttpOrThreadLocalScoped().Use(() => new <#= efHost.EntityContainer.Name #>());

<#
    foreach (var set in efHost.EntityContainer.BaseEntitySets.OfType<EntitySet>())
    {
#>
        x.For<I<#= set.ElementType.Name #>Service>().Use<<#= set.ElementType.Name #>Service>();
<#
    }
#>
      });
    }

    //public static void Init(ControllerBuilder builder = null)
    //{
    //  InitializeTypes();
    //  if (builder != null)
    //    builder.SetControllerFactory(new StructureMapControllerFactory());
    //}

  }

  //public class StructureMapControllerFactory : DefaultControllerFactory
  //{
  //  protected override IController GetControllerInstance(RequestContext requestContext, Type controllerType)
  //  {
  //    try
  //    {
  //      return ObjectFactory.GetInstance(controllerType) as Controller;
  //    }
  //    catch (ArgumentNullException)
  //    {
  //      throw new HttpException(404, "Controller Not Found!");
  //    }
  //  }
  //}
}
