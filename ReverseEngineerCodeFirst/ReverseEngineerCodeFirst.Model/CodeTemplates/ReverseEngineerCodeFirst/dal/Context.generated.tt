<#@ template hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Data.Metadata.Edm" #>
<#@ parameter name="dalNS" type="System.String" #>
<#@ parameter name="modelsNS" type="System.String" #>
<#@ parameter name="efHost" type="Microsoft.DbContextPackage.Utilities.EfTextTemplateHost" #>
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using <#= dalNS #>.Mappings;
using <#= modelsNS #>;

namespace <#= dalNS #>.Contexts
{
  public partial class <#= efHost.EntityContainer.Name #> : DbContext
  {
    static <#= efHost.EntityContainer.Name #>()
    {
      Database.SetInitializer<<#= efHost.EntityContainer.Name #>>(null);
    }

    public <#= efHost.EntityContainer.Name #>()
      : base("Name=<#= efHost.EntityContainer.Name #>")
    {
    }

<#
    foreach (var set in efHost.EntityContainer.BaseEntitySets.OfType<EntitySet>())
    {
#>
    public DbSet<<#= set.ElementType.Name #>> <#= set.Name #> { get; set; }
<#
    }
#>

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
<#
    foreach (var set in efHost.EntityContainer.BaseEntitySets.OfType<EntitySet>())
    {
#>
      modelBuilder.Configurations.Add(new <#= set.ElementType.Name #>Map());
<#
    }
#>
    }
  }
}
